submit()
submit()
submit()
View(result3)
cran %>% select() %>% print
select(cran, ip_id, country, package, size)
cran %>% select(ip_id, country, package, size) %>% print
submit()
submit()
submit()
submit()
submit()
submit()
q()
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv, stringsAsFactors=FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran,-(x:size))
select(cran,-(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500 & r_os == "linux-gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id)
)
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(counts))
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count)
res <- gather(students2, sex_class, count, male_1:female_2)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
submit()
students3
source('/var/folders/yp/0h28xmxd6jjcbwl__7sjqtzm0000gn/T//RtmpWU6lEc/script2.R')
reset()
submit()
submit()
?spread
submit()
extract_numeric("class5")
submit()
students4
submit()
student_info
submit()
submit()
passed
failed
passed <- mutate(passed, status, "passed")
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
bind_rows(passed, failed)
sat
?separate
submit()
submit()
setwd("~/Desktop/coursera/project/UCI HAR Dataset")
activity.labels <- read.table("activity_labels.txt")
activity.labels
column.labels <- activity.labels$V2
column.labels
tolower(column.labels)
sub("_", "", column.labels, )
tolower(sub("_", "", column.labels, ))
column.labels <- tolower(sub("_", "", activity.labels$V2, ))
column.labels
head(test.labels)
test.labels <- read.table("test/y_test.txt", colClasses="factor")
head(test.labels)
test.labels$V1 <- factor(test.labels$V1, levels = c(1,2,3,4,5,6), labels = column.labels)
head(test.labels)
test.labels <- read.table("test/y_test.txt", colClasses="factor")
test.set <- read.table("test/X_test.txt")
test.subjects <- read.table("test/subject_test.txt")
train.labels <- read.table("train/y_train.txt", colClasses="factor")
train.set <- read.table("train/X_train.txt")
train.subjects <- read.table("train/subject_train.txt")
features <- read.table("features.txt")
activity.labels <- read.table("activity_labels.txt")
rm("by_package")
rm("cran", "cran2", "cran3")
rm("failed", "gradebook", "pack_sum", "passed")
rm("result1", "result2", "result3")
rm("res", "sat", "student_info", "students", "students2")
rm("students3", "students4")
rm("top_countries", "top_counts", "top_counts_sorted")
rm("top_unique_sorted")
rm("top_unique")
library(dplyr)
test.labels
head(test.labels)
test.labels <- tbl_df(test.labels)
test.labels
?tbl_df
test.labels <- read.table("test/y_test.txt", colClasses="factor")
test.set <- tbl_df(test.set)
test.set
test.set <- read.table("test/X_test.txt")
head(test.set)
test.set.tbl <- tbl_df(test.set)
train.set.tbl <- tbl_df(train.set)
test.set.tbl
str(test.set)
summary(test.set)
head(features)
head(features[[2]])
feature.labels <- features[[2]]
names(test.set) <- feature.labels
names(train.set) <- feature.labels
names(test.labels) <- "activity"
names(train.labels) <- "activity"
names(test.subjects) <- "subjects"
names(train.subjects) <- "subjects"
test.set.tbl <- tbl_df(test.set)
test.set.tbl
head(test.labels)
head(test.subjects)
tail(train.labels)
train_id <- seq(1,7352)
train.labels <- cbind(train_id, train.labels)
train.set <- cbind(train_id, train.set)
train.subjects <- cbind(train_id, train.subjects)
test_id <- seq(7353,10299)
test.labels <- cbind(test_id, test.labels)
test.set <- cbind(test_id, test.set)
test.subjects <- cbind(test_id, test.subjects)
test.set.tbl <- tbl_df(test.set)
train.set.tbl <- tbl_df(train.set)
test.set.tbl <-
test.set.tbl
?intersect
union(names(test.set), names(train.set))
intersect(names(test.set), names(train.set))
intersect(!names(test.set), !names(train.set))
dup <- features[!duplicated(lapply(features, summary))]
head(dup)
str(dup)
rm(dup)
duplicated(colnames(train.set))
colnames(train.set[318:325]))
colnames(train.set[318:325])
colnames(train.set[397:424])
colnames(train.set[476:503])
?join_all
head(test.subjects)
str(test.subjects)
str(test.labels)
test.subjects <- read.table("test/subject_test.txt", colClasses="factor")
train.subjects <- read.table("train/subject_train.txt", colClasses="factor")
names(test.subjects) <- "subjects"
names(train.subjects) <- "subjects"
train.subjects <- cbind(train_id, train.subjects)
test.subjects <- cbind(test_id, test.subjects)
str(test.subjects)
test.subjects$subjects
train.subjects$subjects
head(train.subjects)
head(test.subjects)
head(test.labels)
library("plyr", lib.loc="~/Library/R/3.1/library")
library(plyr); library(dplyr)
testlist <- list(test.subjects, test.labels, test.set)
testdf <- join_all(testlist)
rm(test.set.tbl)
rm(train.set.tbl)
testdf.tbl <- tbl_df(testdf)
testdf.tbl
merge.test <- merge(test.subjects, test.labels, by.x = "id", by.y = "id", all=TRUE)
merge.test2 <- merge(merge.test, test.subjects, by.x = "id", by.y = "id", all=TRUE)
merge.test2.df <- tbl_df(merge.test2)
?merge
detach("package:plyr", unload=TRUE)
library("plyr", lib.loc="~/Library/R/3.1/library")
merge.test <- merge(test.subjects, test.labels, by = "id", all=TRUE)
merge.test <- merge(test.subjects, test.labels, by = "test_id", all=TRUE)
head(merge.test)
merge.test2 <- merge(merge.test, test.subjects, by = "test_id", all=TRUE)
merge.test2.df <- tbl_df(merge.test2)
merge.test2.df
merge.test <- merge(test.subjects, test.labels, by = "test_id", all=TRUE)
head(merge.test)
merge.test2 <- merge(merge.test, test.set, by = "test_id", all=TRUE)
merge.test2.df <- tbl_df(merge.test2)
merge.test2.df
library(dplyr)
library(tidyr)
features <- read.table("features.txt")
activity.labels <- read.table("activity_labels.txt")
test.subjects <- read.table("test/subject_test.txt", colClasses="factor")
test.labels <- read.table("test/y_test.txt", colClasses="factor")
test.set <- read.table("test/X_test.txt")
train.subjects <- read.table("train/subject_train.txt", colClasses="factor")
train.labels <- read.table("train/y_train.txt", colClasses="factor")
train.set <- read.table("train/X_train.txt")
feature.labels <- features[[2]]
names(test.set) <- feature.labels
names(train.set) <- feature.labels
names(test.labels) <- "activity"
names(train.labels) <- "activity"
names(test.subjects) <- "subjects"
names(train.subjects) <- "subjects"
train_id <- seq(1,7352)
train.subjects <- cbind(train_id, train.subjects)
train.labels <- cbind(train_id, train.labels)
train.set <- cbind(train_id, train.set)
test_id <- seq(7353,10299)
test.subjects <- cbind(test_id, test.subjects)
test.labels <- cbind(test_id, test.labels)
test.set <- cbind(test_id, test.set)
merge.test <- merge(test.subjects, test.labels, by = "test_id", all=TRUE)
merge.test2 <- merge(merge.test, test.set, by = "test_id", all=TRUE)
merge.test2.df <- tbl_df(merge.test2)
merge.test2.df
merge.1 <- merge(test.subjects, test.labels, by = "test_id", all=TRUE)
merge.test <- merge(merge.1, test.set, by = "test_id", all=TRUE)
merge.test.df <- tbl_df(merge.test)
merge.2 <- merge(train.subjects, train.labels, by = "test_id", all=TRUE)
merge.train <- merge(merge.2, train.set, by = "test_id", all=TRUE)
merge.train.df <- tbl_df(merge.train)
merge.2 <- merge(train.subjects, train.labels, by = "train_id", all=TRUE)
merge.train <- merge(merge.2, train.set, by = "train_id", all=TRUE)
merge.train.df <- tbl_df(merge.train)
merge.train.df
merge.all <- merge(merge.train, merge.test,
by.x = "train_id", by.y = "test_id", all=TRUE)
merge.all.df <- tbl_df(merge.all)
merge.all.df
rm(merge.all)
rm(merge.all.df)
merge.all <- bind_rows <- (merge.train, merge.test)
merge.all <- bind_rows(merge.train, merge.test)
merge.all.df <- tbl_df(merge.all)
merge.all.df
names(merge.all)
head(merge.all)
merge.test.df
colNames(merge.test.df[1])
colName(merge.test.df[1])
names(merge.test.df[1])
names(merge.train.df[1])
names(merge.test[1]) <- "id"
names(merge.train[1]) <- "id"
merge.all <- bind_rows(merge.train, merge.test) ###
merge.all.df <- tbl_df(merge.all)
merge.all.df
names(merge.test)
merge.1 <- merge(test.subjects, test.labels, by = "test_id", all=TRUE)
merge.test <- merge(merge.1, test.set, by = "test_id", all=TRUE)
names(merge.test[1]) <- "id"
names(merge.test)
names(merge.test[1]) <- "id"
names(merge.test[1])
colnames(merge.test)[1]
colnames(merge.test)[1] <- "id"
colnames(merge.test)[1]
head(merge.test)
colnames(merge.test)
colnames(merge.train)[1] <- "id"
merge.all <- bind_rows(merge.train, merge.test) ###
merge.all <- bind_rows(merge.train, merge.test) ###
colnames(merge.train)[1] <- "id"
merge.all <- bind_rows(merge.train, merge.test) ###
colnames(merge.test)[1] <- "id"
merge.all.df <- tbl_df(merge.all)
merge.all.df
colnames(merge.all)
grep("mean()", merge.all)
grep("mean()", colnames(merge.all))
lgrep("mean()", colnames(merge.all))
grepl("mean()", colnames(merge.all))
grep("std()", colnames(merge.all))
mean.cols <- grep("mean()", colnames(merge.all))
mean.cols
std.cols <- grep("std()", colnames(merge.all))
cols <- grep("std()" | "mean()", colnames(merge.all))
mean.std.cols <- mean.cols + std.cols
mean.std.cols <- c(mean.cols, std.cols)
mean.std.cols
as.integer(mean.std.cols)
as.numeric(mean.std.cols)
as.table(mean.std.cols)
table(mean.std.cols)
mean.std.cols
mean.std.cols <- paste(mean.cols, std.cols)
mean.std.cols <- c(mean.cols, std.cols)
sort(mean.std.cols)
mean.std.cols <- sort(c(mean.cols, std.cols))
mean.std.cols
merge.all.df <- tbl_df(merge.all)
merge.all.df[,4:9]
merge.all.df[,44:49]
col.names <- merge.all.df[, mean.std.cols]
names(col.names)
x <- select(merge.all.df, mean.std.cols)
names(x)
meanFreq.cols <- grep("meanFreq()", colnames(merge.all))
x <- select(merge.all.df, mean.std.cols, -meanFreq.cols)
names(x)
df <- select(merge.all, subjects, activity, mean.std.cols, -meanFreq.cols)
names(df)
df <- select(merge.all, id:activity, mean.std.cols, -meanFreq.cols)
names(df)
df <- tbl_df(df)
df
tail(df)
?grep
names(df)
names(df$activity)
levels(df$activity)
levels(df$activity) <- list(walking="1", walkingupstairs="2", walkingdownstairs="3", sitting="4", standing="5", laying="6")
levels(df$activity)
is.na(df$activity)
any(is.na(df$activity))
df
names(df)
sub("()", "", names(df))
gsub("-", "", names(df))
sub("(", "", names(df))
sub(")", "", names(df))
sub("(", "", names(df))
?gsub
sub('(', "", names(df))
sub("/(", "", names(df))
sub("\(", "", names(df))
sub("[:punct:]", "", names(df))
names(df)
sub("[:punct:]", "", names(df))
names(df)
names(df) <- gsub("-", "", names(df))
df
names(df) <- gsub("()", "", names(df))
names(df)
names(df) <- sub("()", "", names(df))
names(df)
names(df) <- sub(as.character("("), "", names(df))
names(df) <- sub("[()]", "", names(df))
names(df)
names(df) <- sub(")", "", names(df))
names(df)
names(df) <- tolower(names(df))
names(df)
df
View(df)
arrange(df, subjects)
View(df)
df <- arrange(df, subjects, activity)
View(df)
df$subjects <- as.numeric(df$subjects)
df <- arrange(df, subjects, activity)
View(df)
any(is.na(df))
?group_by
by_subject <- group_by(df, subjects)
by_subject
by_subject_activity <- group_by(by_subject, activity)
by_subject_activity
tidydf <- (by_subject_activity, mean(activity))
tidydf <- summarize(by_subject_activity, mean(activity))
tidydf <- summarize(by_subject, mean(activity))
by_subject <- group_by(df, subjects)
tidydf <- summarize(by_subject, mean())
?summarise_each
?melt
df
tidydf <- gather(df, measure, value, -(id:activity))
tidydf
tail(tidydf)
by_package <- group_by(tidydf, subject, activity)
by_package <- group_by(tidydf, subjects, activity)
tidydf.mean <- summarize(by_package, mean(measure))
tidydf.mean <- summarize(by_package, mean(value))
tidydf.mean
?by_package
?group_by
mtcars
df
tidydf
?summarise_each
by_measure <- tidydf %>% group_by(measure)
by_measure
by_measure <- tidydf %>%
group_by(measure) %>%
summarize_each(funs(mean))
by_measure <- tidydf %>%
group_by(measure) %>%
summarise_each(funs(mean))
by_measure
tidydf
tidydf2 <- filter(tidydf, subjects=="1")
tidydf2
tidydf3 <- filter(tidydf2, activity=="walking")
tidydf3
by_measure <- group_by(tidydf3, measure)
tidydf4 <- summarize(by_measure, mean(value))
tidydf4
head(tinydf3$measure)
head(tidydf3$measure)
?summarize
?summarise
?summarize
levels(measure)
levels(tidydf3$measure)
head(mtcars)
summarize(mtcars, mean(disp))
by_cyl <- group_by(mtcars, cyl)
summarize(by_cyl, mean(disp))
str(mtcars)
summarize(group_by(mtcars, cyl), mean(disp))
?melt
mtcars$carname <- rownames(mtcars)
mtcars$carname
head(mtcars)
carMelt <- melt(mtcars, id="carname", "gear", "cyl")
library(reshape2)
carMelt <- melt(mtcars, id=c("carname", "gear", "cyl"), measure.vars = c("mpg", "hp")
)
head(carMelt)
head(carMelt, 20)
tail(carMelt)
cylData <- dcast(carMelt, cyl~variable)
cylData <- dcast(carMelt, cyl~variable, mean)
head(cylData)
measure_vec <- tidydf$measure
measure_vec <- names(tidydf$measure)
measure_vec <- unique(tidydf$measure)
dfMelt <- melt(tidydf, id=c("id", "subjects" activity"), measure.vars = measure_vec
dfMelt <- melt(tidydf, id=c("id", "subjects", "activity"), measure.vars = measure_vec
)
dfMelt <- melt(tidydf, id=c("id", "subjects", "activity"), measure.vars = "measure_vec":"fbody")
dfMelt <- melt(tidydf, id=c("id", "subjects", "activity"),
measure.vars = c("tbodyaccmeanx", "tbodyaccmeany", "tbodyaccmeanz")
dfMelt <- melt(tidydf, id=c("id", "subjects", "activity"),
measure.vars = c("tbodyaccmeanx", "tbodyaccmeany", "tbodyaccmeanz"))
measure_vec <- unique(tidydf$measure)
dfMelt <- melt(tidydf, id=c("id", "subjects", "activity"),
measure.vars = c("tbodyaccmeanx", "tbodyaccmeany", "tbodyaccmeanz"))
dfMelt <- melt(tidydf, id=c("id", "subjects", "activity"), measure.vars = c("tbodyaccmeanx", "tbodyaccmeany", "tbodyaccmeanz"))
dfMelt <- melt(tidydf, id=c("id", "subjects", "activity"), measure.vars = "measure")
measureData <- dcast(dfMelt, activity~measure, mean)
dfMelt
head(dfMelt)
head(dfMelt, 30)
